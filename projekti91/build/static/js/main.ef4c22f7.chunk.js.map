{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAG1B,OACI,wBAAQA,QAASA,EACjBC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAFV,SAGKJ,KAKbF,EAAOO,aAAe,CAElBN,MAAO,YAYID,QCzBTQ,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAE5B,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAOU,EAAU,MAAQ,QAAST,KAAMS,EAAU,QAAU,MAAOR,QAASO,QAKhGF,EAAOD,aAAe,CAElBE,MAAO,gBAkBID,Q,SCpBAI,EAZF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKT,UAAS,eAAUO,EAAKG,SAAW,WAAa,IAAOC,cAAe,kBAAMF,EAASF,EAAKK,KAA/F,UAEI,+BAAKL,EAAKX,KAAV,IAAgB,cAAC,IAAD,CAASE,MAAO,CAACH,MAAO,MAAOkB,OAAQ,WAAYhB,QAAU,kBAAKW,EAASD,EAAKK,UAEhG,4BAAIL,EAAKO,UCMNC,EAZD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE9B,OACI,mCACEO,EAAMC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAAoBA,KAAMA,EAC1BC,SAAUA,EAAUC,SAAUA,GADnBF,EAAKK,UC6CVM,EAlDC,SAAC,GAAa,IAAZd,EAAW,EAAXA,MAAW,EAEAe,mBAAS,IAFT,mBAElBvB,EAFkB,KAEXwB,EAFW,OAGFD,mBAAS,IAHP,mBAGlBL,EAHkB,KAGZO,EAHY,OAIQF,oBAAS,GAJjB,mBAIlBT,EAJkB,KAIPY,EAJO,KA4BzB,OACI,uBAAMtB,UAAU,WAAWuB,SAvBd,SAACC,GAEdA,EAAEC,iBAEG7B,GAQLQ,EAAM,CAACR,OAAMkB,MAAKJ,aAElBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IAVRI,MAAM,sBAiBV,UACI,sBAAK1B,UAAU,eAAf,UACI,yCACA,uBAAO2B,KAAK,OAAOC,YAAY,WAAWC,MAAOjC,EAAMkC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAE7F,sBAAK7B,UAAU,eAAf,UACI,iDACA,uBAAO2B,KAAK,OAAOC,YAAY,mBAAmBC,MAAOf,EAAKgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAEnG,sBAAK7B,UAAU,mCAAf,UACI,iDACA,uBAAO2B,KAAK,WAAWK,QAAStB,EAAUmB,MAAOnB,EAAUoB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAG5G,uBAAOL,KAAK,SAASE,MAAM,YAAY7B,UAAU,sBCkC9CkC,MAzEf,WAAgB,IAAD,EAEyBf,oBAAS,GAFlC,mBAENgB,EAFM,KAEOC,EAFP,OAIajB,mBAAS,CAEjC,CAEIP,GAAI,EACJhB,KAAM,uBACNkB,IAAK,oBACLJ,UAAU,GAId,CAEIE,GAAI,EACJhB,KAAM,oBACNkB,IAAK,oBACLJ,UAAU,GAId,CAEIE,GAAI,EACJhB,KAAM,gBACNkB,IAAK,oBACLJ,UAAU,KA7BH,mBAINM,EAJM,KAICqB,EAJD,KAgEb,OACE,sBAAKrC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,MAAO,kBAAMgC,GAAgBD,IAAc9B,QAAS8B,IAC3DA,GAAe,cAAC,EAAD,CAAS/B,MA5Bb,SAACG,GAEf,IAAMK,EAAK0B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EAEzCC,EAAO,aAAK7B,MAAOL,GAEzB8B,EAAS,GAAD,mBAAKrB,GAAL,CAAYyB,QAuBjBzB,EAAM0B,OAAS,EAAI,cAAC,EAAD,CAAO1B,MAAOA,EAAOR,SAlB1B,SAACI,GAElByB,EAASrB,EAAM2B,QAAO,SAACpC,GAAD,OAAUA,EAAKK,KAAOA,OAgBqBH,SAX5C,SAACG,GAEtByB,EAASrB,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAYH,SASW,uBC9DpFqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef4c22f7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n\r\n    return (\r\n        <button onClick={onClick}\r\n        style={{ backgroundColor: color }} \r\n        className=\"btn\">\r\n            {text}\r\n            </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n\r\n    color: \"steeblue\"\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n\r\n}\r\n\r\nexport default Button\r\n","import { getQueriesForElement } from '@testing-library/react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"Close\" : \"Add\"} onClick={onAdd}/>\r\n           </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n\r\n    title: \"Task Tracker\",\r\n  \r\n  }\r\n\r\nHeader.propTypes = {\r\n\r\n    title: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\n//CSS in JS\r\n/* const headingStyle = {\r\n\r\n    color: \"red\",\r\n    backgroundColor: \"black\"\r\n\r\n} */\r\n\r\nexport default Header","import { FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? \"reminder\" : \"\" }`} onDoubleClick={() => onToggle(task.id)}>\r\n\r\n            <h3>{task.text} <FaTimes style={{color: \"red\", cursor: \"pointer\"}} onClick={ () =>onDelete(task.id)}/></h3>\r\n\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <>\r\n         {tasks.map((task) => (\r\n         <Task key={task.id} task={task}\r\n         onDelete={onDelete} onToggle={onToggle}/>\r\n         ))}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [text , setText] = useState(\"\")\r\n    const [day , setDay] = useState(\"\")\r\n    const [reminder , setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (!text)  {\r\n\r\n            alert(\"Please add a task\")\r\n\r\n            return\r\n\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText(\"\")\r\n        setDay(\"\")\r\n        setReminder(false)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day and Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day and Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control  form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n\n    {\n\n        id: 1,\n        text: \"Doctor's Appointment\",\n        day: \"Feb 5th at 2:30pm\",\n        reminder: true,\n\n    },\n\n    {\n\n        id: 2,\n        text: \"Meeting at School\",\n        day: \"Feb 6th at 1:30pm\",\n        reminder: true,\n\n    },\n\n    {\n\n        id: 3,\n        text: \"Food Shopping\",\n        day: \"Feb 5th at 2:30pm\",\n        reminder: false,\n\n    }\n\n])\n\n  const name = \"Brad\";\n  const x = true;\n\n  //ADD TASK\n  const addTask = (task) => {\n\n    const id = Math.floor(Math.random() * 10000) + 1\n\n    const newTask = { id, ...task}\n\n    setTasks([...tasks, newTask])\n\n  }\n\n  //DELETE TASK\n  const deleteTask = (id) => {\n\n    setTasks(tasks.filter((task) => task.id !== id))\n\n  }\n\n  //TOGGLE REMINDER\n  const toggleReminder = (id) => {\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : \"No Tasks To Show\"}\n     </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}